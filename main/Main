import os
import sys
import subprocess
import pyautogui
import time
import speech_recognition as sr

sys.path.append(os.path.join(os.path.dirname(__file__), '../..')) 
from Core.VoiceRecognition.voice_verification import verify_voice
from Core.CommandExecutor.command_executor import CommandExecutor

def listen_for_commands():
    """Listen for voice commands and process them."""
    recognizer = sr.Recognizer()
    microphone = sr.Microphone()

    with microphone as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)  # Adjust for background noise
        audio = recognizer.listen(source)

    try:
        print("Recognized: ", end="")
        command = recognizer.recognize_google(audio).lower()
        print(command)
        return command
    except sr.UnknownValueError:
        print("Sorry, I did not understand that.")
        return None
    except sr.RequestError:
        print("Sorry, the speech service is unavailable.")
        return None

def main():
    print("Starting Asvatha Voice Assistant...")
    
    # # Authenticate the user's voice
    # print("Authenticating voice...")
    # if verify_voice():
    #     print("Authentication successful. You can now give commands.")
    #     executor = CommandExecutor()
    #     while True:
    #         command = listen_for_commands()
    #         if command.lower() == 'exit':
    #             print("Exiting Asvatha Assistant. Goodbye!")
    #             break
    #         executor.execute(command)
    # else:
    #     print("Authentication failed. Exiting...")
    #     return
    executor = CommandExecutor()  # Use the CommandExecutor instance to handle commands

    while True:
        # Listen for commands
        command = listen_for_commands()

        if command.lower() == 'exit':
            print("Exiting Asvatha Assistant. Goodbye!")
            break
        executor.execute(command)

if __name__ == "__main__":
    main()
